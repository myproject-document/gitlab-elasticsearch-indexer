default:
  tags:
    - gitlab-org

workflow:
  rules: &workflow_rules
    # For merge requests, create a pipeline.
    - if: '$CI_MERGE_REQUEST_IID'
    # For `main` branch, create a pipeline (this includes on schedules, pushes, merges, etc.).
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    # For tags, create a pipeline.
    - if: '$CI_COMMIT_TAG'

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

.test-default:
  extends: .go-cache
  variables:
    GITALY_CONNECTION_INFO: '{"address":"tcp://gitaly:8075", "storage":"default"}'
    V: "1"
    ELASTIC_CONNECTION_INFO: '{"url":["http://elasticsearch:9200"], "index_name":"gitlab-test"}'
    # Make Elasticsearch less memory-hungry
    ES_JAVA_OPTS: "-Xms256m -Xmx256m"
  stage: test
  script:
    - apt-get update && apt-get -yy install libicu-dev
    - make format
    - make cover
    - make
    - make test

.test-es7:
  extends: .test-default
  services:
    - name: elasticsearch:7.14.2
      command: ["elasticsearch", "-E", "discovery.type=single-node"]
      alias: elasticsearch
    - name: registry.gitlab.com/gitlab-org/build/cng/gitaly:master
      # Disable the hooks so we don't have to stub the GitLab API
      command: ["bash", "-c", "mkdir -p /home/git/repositories && rm -rf /srv/gitlab-shell/hooks/* && exec /usr/bin/env GITALY_TESTING_NO_GIT_HOOKS=1 /scripts/process-wrapper"]
      alias: gitaly

test 1.16:
  extends: .test-es7
  image: golang:1.16

test 1.17:
  extends: .test-es7
  image: golang:1.17

lint:go-mod:
  image: golang:1.17
  stage: test
  script:
    - go mod tidy
    - |
      STATUS=$( git status --porcelain go.mod go.sum )
      if [ ! -z "$STATUS" ]; then
        git diff go.mod go.sum
        echo ""
        echo "Running go mod tidy modified go.mod and/or go.sum"
        exit 1
      fi

lint:golangci:
  image: golangci/golangci-lint:v1.43.0
  stage: test
  script:
    - golangci-lint run -v --disable-all -E errcheck -E deadcode -E ineffassign -E structcheck -E typecheck -E varcheck

code_navigation:
  image: sourcegraph/lsif-go:v1
  allow_failure: true
  script:
    - apt-get update && apt-get -yy install libicu-dev
    - lsif-go
  artifacts:
    reports:
      lsif: dump.lsif

gosec-sast:  
  rules: *workflow_rules

gemnasium-dependency_scanning:
  rules: *workflow_rules

secret_detection:
  rules: *workflow_rules
